version: 2.1
aliases:
  - &sonar-scan
    command: |
      mvn sonar:sonar \
        -Dsonar.projectKey=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.organization=enturas-github \
        -Dsonar.projectName=${CIRCLE_PROJECT_REPONAME} \
        -Dsonar.host.url=https://sonarcloud.io \
        -Dsonar.login=${ENTUR_SONAR_PASSWORD}

  - &release
    name: Release
    command: |
      if [ "$(git log -1 --pretty=%B)" == "Start release" ]
      then
        echo "Start release"
        git config --global user.email "circleci@entur.no"
        git config --global user.name "circleci"
        git checkout master
        git pull --no-edit
        git checkout develop
        mvn versions:use-releases
        mvn gitflow:release-start gitflow:release-finish -Prelease -DpostReleaseGoals=deploy -DargLine=-Prelease -B
      else
        echo "Skipping release"
      fi

  - &import_gpg_key
    name: Configure GPG private key for signing project artifacts in OSS Sonatype
    command: |
      echo $SONATYPE_GPG_KEY_BASE64 | base64 --decode | gpg --batch --no-tty --import --yes


  - &maven-settings-file
        "\"<settings xsi:schemaLocation='http://maven.apache.org/SETTINGS/1.1.0 http://maven.apache.org/xsd/settings-1.1.0.xsd' xmlns='http://maven.apache.org/SETTINGS/1.1.0'
                xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'>
              <servers>
              <server>
                     <username>$SONATYPE_USERNAME</username>
                     <password>$SONATYPE_PASSWORD</password>
                     <id>ossrh</id>
                   </server>
                <server>
                  <username>$entur_artifactory_user</username>
                  <password>$entur_artifactory_password</password>
                  <id>central</id>
                </server>
                <server>
                  <username>$entur_artifactory_user</username>
                  <password>$entur_artifactory_password</password>
                  <id>snapshots</id>
                </server>
              </servers>
              <profiles>
          <profile>
            <repositories>
              <repository>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
                <id>central</id>
                <name>entur-team-kontobasert-billettering-release</name>
                <url>https://entur2.jfrog.io/entur2/entur-team-kontobasert-billettering-release</url>
              </repository>
              <repository>
                <snapshots />
                <id>snapshots</id>
                <name>entur-team-kontobasert-billettering-snapshot</name>
                <url>https://entur2.jfrog.io/entur2/entur-team-kontobasert-billettering-snapshot</url>
              </repository>
            </repositories>
            <pluginRepositories>
              <pluginRepository>
                <snapshots>
                  <enabled>false</enabled>
                </snapshots>
                <id>central</id>
                <name>entur-team-kontobasert-billettering-release</name>
                <url>https://entur2.jfrog.io/entur2/entur-team-kontobasert-billettering-release</url>
              </pluginRepository>
              <pluginRepository>
                <snapshots />
                <id>snapshots</id>
                <name>entur-team-kontobasert-billettering-snapshot</name>
                <url>https://entur2.jfrog.io/entur2/entur-team-kontobasert-billettering-snapshot</url>
              </pluginRepository>
            </pluginRepositories>
            <id>artifactory</id>
          </profile>
              </profiles>
              <activeProfiles>
                <activeProfile>artifactory</activeProfile>
              </activeProfiles>
            </settings>\""


    - &java-container-config
      docker:
        - image: circleci/openjdk:8-jdk

  commands:
    generate-maven-settings-file:
      parameters:
        settings-file:
          type: string
      steps:
        - run:
            name: Generate Maven Settings File
            command: |
              mkdir -p ~/.m2
              echo -e << parameters.settings-file >> > ~/.m2/settings.xml

jobs:
  test:
    <<: *java-container-config
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
    - checkout
    - restore_cache:
        keys: 
          - dep-cache-{{ checksum "pom.xml" }}
          - dep-cache-base
    - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline
    - save_cache:
        paths:
        - ~/.m2
        key: dep-cache-{{ checksum "pom.xml" }}
    # Cannot use -o because of snapshot dependencies.
    - run: mvn verify
    - persist_to_workspace:
            root: .
            paths:
              - spi-impl/target/
              - usage/target/

    - run:
        name: Save test results
        command: |
          mkdir -p ~/junit/
          find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
        when: always
    - store_test_results:
        path: ~/junit
    - store_artifacts:
        path: ~/junit
  deploy-artifactory:
    <<: *java-container-config
    environment:
      MAVEN_OPTS: -Xmx3G
    steps:
    - checkout
    - restore_cache:
        keys: 
          - dep-cache-{{ checksum "pom.xml" }}
          - dep-cache-base
    - run: mvn org.apache.maven.plugins:maven-dependency-plugin:3.1.0:go-offline
    - save_cache:
        paths:
        - ~/.m2
        key: dep-cache-{{ checksum "pom.xml" }}
    # Cannot use -o because of snapshot dependencies.
    - run: mvn deploy -DskipTests

  sonar:
    <<: *java-container-config
    environment:
      MAVEN_OPTS: -Xmx1G -Xms1G
    steps:
      - checkout
      - attach_workspace:
          at: .
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "pom.xml" }}
            - dep-cache-base
      - run: *sonar-scan
  release:
    <<: *java-container-config
    environment:
      MAVEN_OPTS: -Xmx1G -Xms1G
    steps:
      - checkout
      - run: *import_gpg_key
      - generate-maven-settings-file:
          settings-file: *maven-settings-file
      - restore_cache:
          keys:
            - dep-cache-{{ checksum "pom.xml" }}
            - dep-cache-base
      - run: *release

workflows:
  version: 2
  nightly-sonar-analysis:
    triggers:
      - schedule:
          cron: "0 2 * * *"
          filters:
            branches:
              only: develop
    jobs:
      - test:
          context: org-default-build
      - sonar:
          context: org-default-build
          requires:
            - test


  build_test_deploy:
    jobs:
    - test:
        context: org-default-build
    - deploy-artifactory:
        context: org-default-build
        requires:
        - test
        filters:
          branches:
            only: develop
    - release:
        context: org-default-build
        requires:
          - test
        filters:
          branches:
            only: develop

